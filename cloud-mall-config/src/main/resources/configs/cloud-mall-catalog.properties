spring.application.name = cloud-mall-catalog
#spring.application.log.path = /opt/logs/cloud/${spring.application.name}/${spring.application.name}
server.port = 10030

#开启注册中心的保护机制，默认是开启,生产建议关闭，当检查所有服务达到一定比例的时候都没发送心跳，他会认为是网络故障
#则开启自我保护机制，把这些服务都不从服务注册表中移除
eureka.server.enable-self-preservation = false
# eureka.server.renewal-percent-threshold = 0.85
# eureka.client.service-url.defaultZone = http://cloud-shop-02:10000/eureka/
eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true

################# Eureka 客户端优化 ######################
### 优化，默人30秒
eureka.client.registry-fetch-interval-seconds=3
# Eureka 客户端每隔30秒才发送一次心跳，优化为3秒
eureka.instance.lease-renewal-interval-in-seconds = 3
eureka.instance.prefer-ip-address=true

# 数据源配置
spring.datasource.type = com.zaxxer.hikari.HikariDataSource
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.username = root
spring.datasource.password = 123456
spring.datasource.url = jdbc:mysql://192.168.3.24:3306/cloud_shop_catalog?useSSL=false&useUnicode=true&characterEncoding=utf8

mybatis.mapper-locations=classpath:/mapper/*.xml
mybatis.type-aliases-package=com.cloud.model.catalog

#### Hikari连接池的配置 ####
# 插入、删除、更新默认自动提交事务，mysql默认也是自动提交，但是spring会先设置为不自动提交，然后spring事务管理器会将数据库
# 连接对象的自动提交设置为false,直到完成事务提交，spring又给设置回去.
# MySQL的自动提交，是每条来自客户端的语句执行完后自动提交。如果是一组操作，使用begin或start transaction显式开启一个事
# 务，则需要显示的commit或rollback来结束事务。
spring.datasource.hikari.auto-commit = true
# 设置最大连接数
spring.datasource.hikari.maximum-pool-size = 17
# 连接关闭前最大空闲时间，超过这个时间就会关闭连接。设置这个目的是因为数据库一般都有默认的连接空闲时长，比如MySQL默认8小时，8小
# 时后，数据库连接关闭，但是数据库连接池是不知道的，所以需要在数据库连接池设置一个时间，到期就关闭连接(3分钟)
spring.datasource.hikari.idle-timeout = 180000
# 连接关闭前最小空闲连接数量，即连接池在空闲的时候也必须的连接数量，不能全部把连接关闭完
spring.datasource.hikari.minimum-idle = 2
# 客户端等待从连接池获取连接的等到时间()
spring.datasource.hikari.connection-timeout = 30000
# 这个连接最多存活3分钟，超过就会断开，如果为0，表示无限生命周期，最好和idle-timeout(连接超时时间设置一致)
spring.datasource.hikari.max-lifetime = 1800000
# 连接池名字
spring.datasource.hikari.pool-name = CloudShopHikari
#  set names utf8mb4; 命令会将 character_set_client、character_set_connection、character_set_results 3个会话字符集相关变量均设置为 utf8mb4，以保证写入或者读出的数据使用 utf8mb4 字符集进行解释
spring.datasource.hikari.connection-init-sql = set names utf8mb4


#### 设置Redis 连接 ####
spring.redis.host = cloud-shop-01
spring.redis.port = 6379
spring.redis.password = 123abcABC
spring.redis.database = 0
#  连接池最大连接数,使用负值表示无限制
spring.redis.lettuce.pool.max-active = 8
# 连接池最大空闲数,使用负值表示无限制
spring.redis.lettuce.pool.max-idle = 8
# 连接池最大阻塞等待时间,使用负值表示无限制
spring.redis.lettuce.pool.max-wait = -1s
# 连接池最小空闲连接，只有设置为正值时候才有效
spring.redis.lettuce.pool.min-idle = 1
# redis超时时间
spring.redis.timeout=10s

# Redis缓存配置
spring.cache.redis.use-key-prefix=false
# spring.cache.redis.key-prefix=cloud
spring.cache.redis.time-to-live=20s
spring.cache.redis.cache-null-values=false

# EHCache缓存配置
spring.cache.ehcache.config=ehcache.xml

##  序列化
spring.jackson.serialization.fail-on-empty-beans=false

ribbon.eureka.enabled=true
##########ribbin 超时设置  ###############
ribbon.OkToRetryOnAllOperations=false
# 负载均衡超时时间，默认值5000
ribbon.ReadTimeout = 6000
# ribbon请求连接的超时时间，默认值2000
ribbon.ConnectTimeout = 6000
# 对当前实例的重试次数，默认0
ribbon.MaxAutoRetries = 0
# 对切换实例的重试次数，默认1
ribbon.MaxAutoRetriesNextServer = 1
# Spring Cloud生产优化，系统第一次启动的时候，人家调用你经常会出现timeout
ribbon.eager-load.enabled=true

# hystrix设置
feign.hystrix.enabled=true
hystrix.command.default.execution.timeout.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=15000

#spring.cloud.sentinel.transport.dashboard=192.168.3.24:18080
#feign.sentinel.enabled=true



#### 监控 #########
management.endpoints.prometheus.enable=true
management.endpoints.web.exposure.include=*
# ["prometheus","info","health"]

