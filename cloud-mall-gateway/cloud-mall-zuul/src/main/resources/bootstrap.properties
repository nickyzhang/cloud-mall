spring.application.name=cloud-mall-zuul
spring.profiles.active=dev
server.port=8080

# 根据服务ID查找配置，虽然端口不一样，但是服务名是一样的
spring.cloud.config.discovery.service-id=cloud-config-server
# 不建议使用URI，因为有可能Config Server地址会变化
spring.cloud.config.uri=http://cloud-config-server
# 指定获取配置的项目名称
spring.cloud.config.name=cloud-mall-zuul
# 启用自动发现,开启配置信息发现
spring.cloud.config.discovery.enabled=true
# 指定获取配置的profile
spring.cloud.config.profile=prod
# 指定获取配置的分支名
spring.cloud.config.label=master

#################### Eureka 配置 ####################
eureka.client.service-url.defaultZone = http://cloud-shop-02:10000/eureka/
#开启注册中心的保护机制，默认是开启
eureka.server.enable-self-preservation = false
# eureka.server.renewal-percent-threshold = 0.85

eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true

#################### Eureka 客户端优化 ####################
### 优化，默人30秒
eureka.client.registry-fetch-interval-seconds=3
# Eureka 客户端每隔30秒才发送一次心跳，优化为3秒
eureka.instance.lease-renewal-interval-in-seconds = 3
eureka.instance.prefer-ip-address=true


# 主机对应的每一个路由最大连接数
max-connection-per-route=300
# zuul 可以建立的最大连接(host对应的host总连接数)
zuul.max.host.connections=10000

#################### Zuul路由设置
zuul.prefix=/api
zuul.strip-prefix=true

zuul.routes.auth-api.path=/auth/**
## zuul.routes.auth-api.url=http://192.168.3.24:8084
zuul.routes.auth-api.service-id=cloud-mall-auth

zuul.routes.catalog-api.path=/catalog/**
##zuul.routes.catalog-api.url=http://192.168.3.24:10020
zuul.routes.catalog-api.service-id=cloud-mall-catalog

zuul.routes.account-api.path=/user/**
#zuul.routes.account-api.url=http://192.168.3.24:10010
zuul.routes.account-api.service-id=cloud-mall-user

zuul.routes.cart-api.path=/cart/**
zuul.routes.cart-api.service-id=cloud-mall-cart

zuul.routes.promotion-api.path=/promotion/**
zuul.routes.promotion-api.service-id=cloud-mall-promotion

zuul.routes.inventory-api.path=/inventory/**
zuul.routes.inventory-api.service-id=cloud-mall-inventory

zuul.routes.order-api.path=/order/**
zuul.routes.order-api.service-id=cloud-mall-order

zuul.routes.pay-api.path=/pay/**
zuul.routes.pay-api.service-id=cloud-mall-pay

zuul.routes.search-api.path=/search/**
zuul.routes.search-api.service-id=cloud-mall-search

zuul.routes.deatils-api.path=/details/**
zuul.routes.deatils-api.service-id=cloud-mall-details

zuul.routes.review-api.path=/review/**
zuul.routes.review-api.service-id=cloud-mall-review

zuul.routes.zuul-api.path=/zuul/**
zuul.routes.zuul-api.service-id=cloud-mall-zuul

#################### 自定义属性 ####################
zuul.access.filter.disallowed-paths-prefix=/user,/order,/pay,/promotion,/cart
zuul.rate-limiter.filter.need-limit-path-list=/api/catalog,/api/stock,/api/remark,/api/details


###################### 消息队列配置 ######################
spring.rabbitmq.host = cloud-shop-01
spring.rabbitmq.port = 5672
spring.rabbitmq.username = cloud
spring.rabbitmq.password = cloud


###################### 超时设置 ######################
###################### URL 路由超时配置 ######################
# 和目标服务建立连接超时
zuul.host.connect-timeout-millis=1000
# 对于已经建立连接的服务，可以通过socket 超时判断服务实例是否宕机或者连接已断开，如果已断开，则zuul这边不用傻等
zuul.host.socket-timeout-millis=1000

###################### serviceId 路由超时配置 ######################
# 明确表示ribbon中使用eureka
ribbon.eureka.enabled=true
# 如果设置为true，那么其他的POST、PUT请求超时也可以重试，如果没做接口幂等性，那么就等着倒霉吧
# 如果设置为fase, 那么POST、PUT请求超时时不进行重试，但是GET请求需要重试
ribbon.OkToRetryOnAllOperations=false
# Spring Cloud生产优化，系统第一次被请求时候，每一个服务才会去初始化Ribbon的一些组件，需要耗费一定时间，所以很容易导致超时。
# 所以让每一个服务在启动的时候就去加载Ribbon相关的组件，避免第一次请求才去初始化，即立即加载。
ribbon.eager-load.enabled=true

# 处理请求超时时间或者服务调用请求超时时间，比如慢SQL或者故障导致服务调用超时
ribbon.ReadTimeout = 1000
# ribbon请求连接的超时时间，默认值2000, 即连接别的服务的请求超时时间
ribbon.ConnectTimeout = 1000
# 如果发生超时，比如商品详情服务调用库存服务，一般重试2次就可以了
# 对当前实例的重试次数，默认1
ribbon.MaxAutoRetries = 1
# 对切换实例的重试次数，默认1
ribbon.MaxAutoRetriesNextServer = 1


#################### 解决中文乱码 ####################
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8

###################### Actuator监控 ######################
management.endpoints.web.exposure.include=*


#################### Tomcat调优 #######################
server.tomcat.uri-encoding=UTF-8
server.tomcat.max-threads=500
server.tomcat.max-connections=10000
server.tomcat.accept-count=500
server.tomcat.min-spare-threads=100

