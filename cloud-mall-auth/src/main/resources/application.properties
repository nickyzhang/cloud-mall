spring.application.name=cloud-mall-auth
#服务端口
server.port=10020

#开启注册中心的保护机制，默认是开启,生产建议关闭，当检查所有服务达到一定比例的时候都没发送心跳，他会认为是网络故障
#则开启自我保护机制，把这些服务都不从服务注册表中移除
eureka.server.enable-self-preservation = false
# eureka.server.renewal-percent-threshold = 0.85
#注册中心路径，如果有多个eureka server，在这里需要配置其他eureka server的地址，用","进行区分，
#如"http://address:10000/eureka,http://address:10000/eureka"
eureka.client.service-url.defaultZone = http://cloud-shop-02:10000/eureka/
# 会向Eureka Server注册自己的信息
eureka.client.register-with-eureka = true
# 表明不会像Eureka Server获取注册信息
eureka.client.fetch-registry = true
################# Eureka 客户端优化 ######################
### 优化，默人30秒
eureka.client.registry-fetch-interval-seconds=3
# Eureka 客户端每隔30秒才发送一次心跳，优化为3秒
eureka.instance.lease-renewal-interval-in-seconds = 3
eureka.instance.prefer-ip-address=true

##########ribbin 超时设置  ###############
ribbon.OkToRetryOnAllOperations=false
# 负载均衡超时时间，默认值5000
ribbon.ReadTimeout = 10000
# ribbon请求连接的超时时间，默认值2000
ribbon.ConnectTimeout = 10000
# 对当前实例的重试次数，默认0
ribbon.MaxAutoRetries = 0
# 对切换实例的重试次数，默认1
ribbon.MaxAutoRetriesNextServer = 1
# Spring Cloud生产优化，系统第一次启动的时候，人家调用你经常会出现timeout
ribbon.eager-load.enabled=true

# hystrix设置
feign.hystrix.enabled=true
hystrix.command.default.execution.timeout.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=30000