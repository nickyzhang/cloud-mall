<?xml version="1.0" encoding="UTF-8"?>
<ehcache>
    <!--当ehcache把数据写到硬盘上时,将写到这个目录下,java.io.tmpdir:为默认临时文件路径-->
    <diskStore path="java.io.tmpdir" />
    <!--默认缓存策略,当ehcache找不到定义的缓存时,则使用这个缓存策略-->
    <defaultCache
            maxElementsInMemory="500"
            eternal="false"
            timeToIdleSeconds="300"
            timeToLiveSeconds="1200"
            overflowToDisk="true" />
    <!--指定名称的缓存配置-->
    <!--
        maxElementsInMemory: 内存缓存中最多可以存放的元素数量,若放入Cache中的元素超过这个数值,则有以下两种情况
            #1 若overflowToDisk=true,则会将Cache中多出的元素放入磁盘文件中
            #2 若overflowToDisk=false,则根据memoryStoreEvictionPolicy策略替换Cache中原有的元素
        overflowToDisk: 内存不足时,是否启用磁盘缓存
        eternal: 缓存中对象是否永久有效
        timeToIdleSeconds：
            #1 缓存数据在失效前的允许闲置时间(单位:秒)，默认值是0表示可闲置时间无穷大
            #2 若超过这个时间没有访问此Cache中的某个元素,那么此元素将被从Cache中清除
            #3 仅当eternal=false时使用,因为为true的时候，缓存元素永不过期
        timeToLiveSeconds：
            #1 缓存数据的总的存活时间(单位：秒)
            #2 仅当eternal=false时使用，从创建开始计时，失效结束
            #3 如果external=false,如果超过空闲时间没有线程访问，也会从缓存中移除，但是并不一定到期；但是
            就算经常被访问，并没有因为空闲时间太长而被移除，但是到期了也会被移除
            #4 maxElementsOnDisk：磁盘缓存中最多可以存放的元素数量,0表示无穷大
    -->
    <cache name="cachePool"
           maxElementsInMemory="10000"
           eternal="false"
           timeToLiveSeconds="36000"
           timeToIdleSeconds="3600"
           overflowToDisk="false" />
</ehcache>